trigger:
  branches:
    include:
      - master

pool:
  name: boardgame-projecy

variables:
  MAVEN_OPTS: "-Dmaven.test.failure.ignore=true"

stages:
  - stage: Build_and_Test
    displayName: "Maven Build and Test"
    jobs:
      - job: MavenBuild
        displayName: "Compile and Run Unit Tests"
        steps:
          - task: Maven@4
            displayName: "Maven Compile & Test"
            inputs:
              azureSubscription: 'Azure subscription 1(5e47e5a1-7dc4-4abb-87a2-f371200842ea)'
              mavenPomFile: 'pom.xml'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false

  - stage: Dependency_Scan
    displayName: "Dependency Scan with Trivy"
    dependsOn: Build_and_Test
    jobs:
      - job: TrivyScan
        displayName: "Trivy Scan on pom.xml"
        steps:
          - script: |
              echo "Installing Trivy..."
              trivy fs --format table --severity MEDIUM,LOW,UNKNOWN,HIGH --exit-code 0 . && trivy fs --format table --severity CRITICAL --exit-code 0 .
            displayName: "Run Trivy on source code"

  - stage: Sonarqube_Analysis
    displayName: "Sonarqube_Analysis"
    jobs:
      - job: Sonarqube
        displayName: "Sonarqube_Analysis"
        steps:
        - task: SonarQubePrepare@7
          inputs:
            SonarQube: 'sonarqube-svc'
            scannerMode: 'cli'
            cliScannerVersion: '7.0.1.4817'
            configMode: 'file'
            extraProperties: |
              # Additional properties that will be passed to the scanner, 
              # Put one key=value per line, example:
              # sonar.exclusions=**/*.bin
               sonar.qualitygate.wait=true
               sonar.qualitygate.timeout=300

  - stage: Run_Code_Analysis
    displayName: "Code Analysis"
    jobs:
      - job: Sonarqube
        displayName: "Code Analysis"
        steps:
        - task: SonarQubeAnalyze@7
          inputs:
            jdkversion: 'JAVA_HOME'

  - stage: Build_the_Code
    displayName: "Build the Code"
    jobs:
      - job: Build_the_Code
        displayName: "Build the Code"
        steps:
         - task: Maven@4
           inputs:
            mavenPomFile: 'pom.xml'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false

  - stage: Build_Docker_Image
    displayName: "Build Docker Image"
    jobs:
      - job: Build_Docker_Image
        displayName: "Build Docker Image"
        steps:
        - task: Docker@2
          inputs:
           containerRegistry: 'docker-svc'
           repository: 'prasannanjaneya/boardgame-project'
           command: 'buildAndPush'
           Dockerfile: '**/Dockerfile'

  - stage: Scan_the_Docker_Image
    displayName: "Scan the Docker Image"
    jobs:
      - job: Scan_the_docker_image
        displayName: "Scan the docker image"
        steps:
        - task: CmdLine@2
          inputs:
           script: 'trivy image prasannanjaneya/boardgame-project:$BUILD_BUILDID --format table --severity MEDIUM,LOW,UNKNOWN,HIGH --exit-code 0   &&  trivy image prasannanjaneya/boardgame-project:$BUILD_BUILDID --format table --severity CRITICAL --exit-code 1'